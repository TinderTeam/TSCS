<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="skinEngine1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>251, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>88</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHhePDCcdUz9oHlI/aF2Rf2ieUv9n3ZL/aN4Sf2keUj9pHlI/aN5
        SP2jeEf9o3hG/Z54Sf2ndUr9XUxn/yMqxv8uLMn/IyPR/4KAv1oAAAAAXZS7ICcnwv8eK8L/KCvK/0dY
        tn4AAAAAAAAAACYyucskK8n/IynH/zk9u88AAAAAkG1CQKFjOumwbjurrIFkz7KBYc+vhV3LrINeyad/
        XL2mgFy5qIBbtaeAW6+mf1qtrodcq6J9XKt3d3GPamGueEhYwn4aHtX/gHnGXAAAAAA8PtBmRj3XzWZr
        vqE5Pc6/NTXKuwAAAAAAAAAAHCHXyy841NstL8/bLzTQzwAAAACbf1lAnV8y/7ixraGGUCHxjVAW/4VQ
        Ev+ETxP/h0wQ/41NEP+KSw//iUsP/4lKD/+DTRD/kEgR/1BEXP8GHtn/WlnLhxwb3/99esZcAAAAAEZA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////////////////////4AA
        OOGAAbhhgAAwYYH8sGHA/rAh4H6wIfA+oCH4HqIh/A6CAf4GgwH/AINBwAAHAcAIhwnAAAeBwAH/////
        //////////////////////////////////8=
</value>
  </data>
</root>